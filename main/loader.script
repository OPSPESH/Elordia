local l = require "main.loader"
local defsave = require("defsave.defsave")
local camera = require("orthographic.camera")

local function cam(self)
	self.collection = defsave.get("player", "collection")
	if self.collection == "#village" then
		camera.follow(nil, "/m_char")
		camera.set_zoom(nil, 1.75)
	elseif self.collection == "#my_house_downstairs" then
		go.set_position(defsave.get("camera", "my_house_downstairs"), "/camera")
		camera.unfollow(nil)
		camera.set_zoom(nil, 2.5)
	elseif self.collection == "#my_house_upstairs" then
		go.set_position(defsave.get("camera", "my_house_upstairs"), "/camera")
		camera.unfollow(nil)
		camera.set_zoom(nil, 2.5)
	elseif self.collection == "#weapon_store" then
		go.set_position(defsave.get("camera", "weapon_store"), "/camera")
		camera.unfollow(nil)
		camera.set_zoom(nil, 2.5)
	end

end
function init(self)
	defsave.appname = "Realms_of_elordia"
	defsave.load("camera")
	
	self.current_screen = defsave.get("player", "collection")
	self.ids = collectionfactory.create(self.current_screen)
	cam(self)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("load_level") then
		-- getss the collection to be loaded
		self.collection = l.get_collection()
		if self.collection == nil then 
			return
			print(self.collection)

		elseif self.collection == "#my_house_downstairs" then
			-- fades the screen
			msg.post("/transition#transition", "play")
			-- waits for it to be a black screen
			timer.delay(0.5, false, function ()
				-- deltes the old screen
				go.delete(self.ids)
				--spawns the new screen 
				self.ids = collectionfactory.create(l.get_collection())
				self.current_screen = l.get_collection()
				-- tells the player to move 
				msg.post("m_char#position", "save_pos")
				msg.post("/m_char#position", "load_pos", {"my_house_downstairs"})
				defsave.set("player", "collection", self.current_screen)
				cam(self)
				msg.post("/m_char", "force_walk", {false})
			end)

		elseif self.collection == "#village" then
			-- fades the screen
			msg.post("/transition#transition", "play")
			-- waits for it to be a black screen
			timer.delay(0.5, false, function ()
				-- deltes the old screen
				go.delete(self.ids)
				--spawns the new screen 
				self.ids = collectionfactory.create(l.get_collection())
				self.current_screen = l.get_collection()
				-- tells the player to move 
				msg.post("m_char#position", "save_pos")
				msg.post("/m_char#position","load_pos", {"village"})
				defsave.set("player", "collection", self.current_screen)
				cam(self)
				msg.post("/m_char", "force_walk", {true})
			end)

		elseif self.collection == "#my_house_upstairs" then
			-- fades the screen
			msg.post("/transition#transition", "play")
			-- waits for it to be a black screen
			timer.delay(0.5, false, function ()
				-- deltes the old screen
				go.delete(self.ids)
				--spawns the new screen 
				self.ids = collectionfactory.create(l.get_collection())
				self.current_screen = l.get_collection()
				-- tells the player to move 
				msg.post("m_char#position", "save_pos")
				msg.post("/m_char#position", "load_pos", {"my_house_upstairs"})
				defsave.set("player", "collection", self.current_screen)
				cam(self)
				msg.post("/m_char", "force_walk", {false})
			end)

		elseif self.collection == "#weapon_store" then
			-- fades the screen
			msg.post("/transition#transition", "play")
			-- waits for it to be a black screen
			timer.delay(0.5, false, function ()
				-- deltes the old screen
				go.delete(self.ids)
				--spawns the new screen 
				self.ids = collectionfactory.create(l.get_collection())
				self.current_screen = l.get_collection()
				-- tells the player to move 
				msg.post("m_char#position", "save_pos")
				msg.post("/m_char#position", "load_pos", {"weapon_store"})
				defsave.set("player", "collection", self.current_screen)
				cam(self)
				msg.post("/m_char", "force_walk", {false})
			end)
		end
	end
end