local defsave = require("defsave.defsave")
local item = require("main.m_char.inventory.items")
local amount = 0
-- local gold = defsave.get("inventory", "gold") 
local gold = 100
local select

local function player()
	for i  = 0,19 do 
		local slot = defsave.get("inventory", "s"..i)
		if slot == "nul" then 
			defsave.set("inventory", "s"..i.."a", 0)
		end
	end

	-- gets the name of item in the slot and sets its texture based on name 
	for i = 0,19 do
		local node = gui.get_node("sp"..i)
		local slot = defsave.get("inventory", "s"..i)
		gui.set_texture(node, "items")
		gui.play_flipbook(node, item.items(slot))
	end

	-- sets the number of items in each slot 
	for i = 0,19 do 
		local node = gui.get_node("tp"..i)
		local slot = defsave.get("inventory", "s"..i.."a")
		if slot == 0 then
			gui.set_text(node, "") 
		else 
			gui.set_text(node, slot)
		end 
	end
end

local function currency()
	-- sets the ammount of currency displayed 
	local node = gui.get_node("gold")
	gui.set_text(node, gold)
end

local function weapon_store()
	for i = 0,2 do 
		local node = gui.get_node("s"..i)
		local slot = defsave.get("npc", "ws"..i)
		gui.set_texture(node, "items")
		gui.play_flipbook(node, item.equipment(slot))
	end

	for i = 0,2 do 
		local node = gui.get_node("t"..i)
		local slot = defsave.get("npc", "ws"..i.."g")
		if slot == 0 then
			gui.set_text(node, "")
		else 
			gui.set_text(node, slot)
		end
	end
end

local function nullify()
	for i = 0,19 do
		local node = gui.get_node("s"..i)
		gui.set_texture(node, "items")
		gui.play_flipbook(node, "blank")
	end

	-- sets the number of items in each slot 
	for i = 0,19 do 
		local node = gui.get_node("t"..i)
		gui.set_text(node, "") 
	end
end


local function update()
	player()
	currency()
	nullify()
end

local function controls(symbol)
	local node = gui.get_node("amount")
	local price = defsave.get("npc", select)
	if price ~= nil then
		if symbol == "plus" then 
			amount = amount + 1
			local total = amount * price
			if total < 0 then 
				gui.set_text(node, 0)
			else
				gui.set_text(node, total)
			end
		elseif symbol == "minus" then 
			amount = amount - 1
			local total = amount * price
			if total < 0 then 
				gui.set_text(node, 0)
			else
				gui.set_text(node, total)
			end
		elseif symbol == "buy" then
			local total = amount * price
			if total > gold then 
				gui.set_text(gui.get_node("out"), "you don't have \n enough gold")
			else 
				gold = gold - total
				amount = 0
				gui.set_text(gui.get_node("amount"), 0)
				-- if defsave.get("npc", select)
				for i = 0,19 do
					local slot = defsave.get("inventory", "s"..i)
					if slot == "nul" then 
						defsave.set("inventory", "s"..i, defsave.get("npc", select))
						currency()
						player()
						break
					end
				end
			end
		end
	end
end

local function select_shop(shop)
	if shop == "weapon_store" then
		weapon_store()
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	defsave.appname = "Realms_of_elordia"
	defsave.default_data = require("main.default")
	defsave.load("npc")
end

function final(self)
	msg.post(".", "release_input_focus")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("shop_show") then 
		local msg = table.remove(message)
		local node = gui.get_node("shop_ui")
		gui.set_enabled(node, true)
		update()
		select_shop(msg)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then 
		for i = 0,19 do
			local node = gui.get_node("s"..i)
			if gui.pick_node(node, action.x, action.y) then 
				local set_node = gui.get_node("select")
				gui.set_position(set_node, gui.get_position(node))
				select = "ws"..i.."g"
				amount = 0
				gui.set_text(gui.get_node("amount"), 0)
			end
		end

		if gui.pick_node(gui.get_node("plus"), action.x, action.y) then
			controls("plus")
		elseif gui.pick_node(gui.get_node("minus"), action.x, action.y) then
			controls("minus")
		elseif gui.pick_node(gui.get_node("buy"), action.x, action.y) then
			controls("buy")
		end
	end
end
-- 
-- you have a better 
-- weapon equipped